version: '3.8'

services:
  db:
    image: postgres:16
    container_name: campus_virtual_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: campus_virtual
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/scripts-source
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d campus_virtual && psql -U admin -d campus_virtual -c \"SELECT COUNT(*) FROM pg_proc WHERE proname = 'get_all_users';\" | grep -q 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  rust_api:
    build: .
    container_name: rust_backend
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://admin:admin123@db:5432/campus_virtual
      RUST_LOG: debug
      RUST_BACKTRACE: 1
    ports:
      - "8080:8080"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin

  k6:
    image: grafana/k6
    container_name: k6
    volumes:
      - ./tests:/tests
    entrypoint: ["k6"]
    command: ["run", "/tests/test_script.js"]
    depends_on:
      - rust_api

volumes:
  postgres_data:
    name: campus_virtual_db_data